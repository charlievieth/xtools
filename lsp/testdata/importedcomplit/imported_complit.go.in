package importedcomplit

import (
	"github.com/charlievieth/xtools/lsp/foo"

	// import completions
	"fm" //@complete("\" //", fmtImport)
	"go/pars" //@complete("\" //", parserImport)
	"github.com/charlievieth/xtools/lsp/signa" //@complete("na\" //", signatureImport)
	"golang.org/x/too" //@complete("\" //", toolsImport)
	"crypto/elli" //@complete("\" //", cryptoImport)
	"github.com/charlievieth/xtools/lsp/sign" //@complete("\" //", signatureImport)
	"github.com/charlievieth/xtools/lsp/sign" //@complete("ols", toolsImport)
	namedParser "go/pars" //@complete("\" //", parserImport)
)

func _() {
	var V int //@item(icVVar, "V", "int", "var")
	_ = foo.StructFoo{V} //@complete("}", Value, icVVar)
}

func _() {
	var (
		aa string //@item(icAAVar, "aa", "string", "var")
		ab int    //@item(icABVar, "ab", "int", "var")
	)

	_ = foo.StructFoo{a} //@complete("}", abVar, aaVar)

	var s struct {
		AA string //@item(icFieldAA, "AA", "string", "field")
		AB int    //@item(icFieldAB, "AB", "int", "field")
	}

	_ = foo.StructFoo{s.} //@complete("}", icFieldAB, icFieldAA)
}

/* "fmt" */ //@item(fmtImport, "fmt", "\"fmt\"", "package")
/* "go/parser" */ //@item(parserImport, "parser", "\"go/parser\"", "package")
/* "github.com/charlievieth/xtools/lsp/signature" */ //@item(signatureImport, "signature", "\"github.com/charlievieth/xtools/lsp/signature\"", "package")
/* "golang.org/x/tools/" */ //@item(toolsImport, "tools/", "\"golang.org/x/tools/\"", "package")
/* "crypto/elliptic" */ //@item(cryptoImport, "elliptic", "\"crypto/elliptic\"", "package")
